;
; This is a successful attempt at reading the bus A LOT faster than default
; GPIOs normally allow. PIO FTW!
;

.program Bus_FastRead
.side_set 1 opt
    wait 1 pin 16    side 0     ; Wait for bus_ready signal to transition high
    nop [ 2 ]
    in pins, 16      side 1     ; Push address MSB and data to ISR in one shot
    nop [ 2 ]
    in pins, 16      side 0     ; Push address LSB and data to ISR in one shot
                                ; SM auto-push will automatically send ISR to FIFO
                                
    wait 0 pin 16               ; Profit?

% c-sdk {
#include "pins.h"
#include "hardware/gpio.h"

static inline void Bus_FastRead_init(PIO pio, uint sm, uint offset)
{
    pio_gpio_init(pio, PIN_ADDRESS_BANK);

    pio_sm_config c = Bus_FastRead_program_get_default_config(offset);

    sm_config_set_sideset_pins(&c, PIN_ADDRESS_BANK);
    pio_sm_set_consecutive_pindirs(pio, sm, PIN_ADDRESS_BANK, 1, true);
    sm_config_set_in_pins(&c, PIN_ISA_D0);
    pio_sm_set_consecutive_pindirs(pio, sm, PIN_ISA_D0, 17, false);
    sm_config_set_in_shift(&c, true, true, 32);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);

    sm_config_set_clkdiv(&c, 1.8);

    // Load & start!
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}

%}
